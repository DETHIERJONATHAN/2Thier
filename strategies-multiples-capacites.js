/**
 * ü§î PROBL√àME : MULTIPLES CAPACIT√âS
 * 
 * Le README TBL Bridge ne sp√©cifie pas comment g√©rer plusieurs capacit√©s simultan√©es !
 * 
 * EXEMPLES PROBL√âMATIQUES :
 * - "Prix kWh avec condition" = Formule (3) + Condition (4)
 * - "Tableau avec calculs" = Formule (3) + Tableau (5) 
 * - "Donn√©es conditionnelles" = Donn√©es (2) + Condition (4)
 */

console.log('ü§î STRAT√âGIES POSSIBLES POUR MULTIPLES CAPACIT√âS');
console.log('================================================\n');

// STRAT√âGIE 1 : PRIORIT√â/HI√âRARCHIE
console.log('üìä STRAT√âGIE 1 : SYST√àME DE PRIORIT√â');
console.log('------------------------------------');
console.log('Ordre de priorit√© d√©croissant :');
console.log('5 = Tableau (plus complexe)');
console.log('4 = Condition (logique)');  
console.log('3 = Formule (calcul)');
console.log('2 = Donn√©es (affichage)');
console.log('1 = Neutre (d√©faut)');
console.log('');
console.log('Exemple: "Prix kWh avec condition" ‚Üí 64 (Condition prioritaire sur Formule)');

// STRAT√âGIE 2 : CAPACIT√â DOMINANTE
console.log('\nüéØ STRAT√âGIE 2 : CAPACIT√â DOMINANTE');
console.log('----------------------------------');
console.log('R√®gles m√©tier :');
console.log('- Si contient "Tableau" ‚Üí toujours 5');
console.log('- Si contient "Condition" ET pas tableau ‚Üí 4');
console.log('- Si contient "Formule" ET pas condition/tableau ‚Üí 3'); 
console.log('- Si contient "Donn√©es" ET pas autre ‚Üí 2');
console.log('- Sinon ‚Üí 1');

// STRAT√âGIE 3 : CODES COMBIN√âS  
console.log('\nüîó STRAT√âGIE 3 : CODES COMBIN√âS');
console.log('------------------------------');
console.log('Utiliser plusieurs chiffres ou caract√®res sp√©ciaux :');
console.log('- "Prix kWh avec condition" ‚Üí 634 (Formule+Condition)');
console.log('- "Tableau avec calculs" ‚Üí 635 (Formule+Tableau)');
console.log('- "Donn√©es conditionnelles" ‚Üí 624 (Donn√©es+Condition)');
console.log('‚ö†Ô∏è PROBL√àME : D√©passe 2 chiffres du format [Type][Capacit√©]');

// STRAT√âGIE 4 : CHAMPS S√âPAR√âS
console.log('\nüì¶ STRAT√âGIE 4 : CHAMPS S√âPAR√âS DANS LA BDD');
console.log('------------------------------------------');
console.log('Garder une seule capacit√© principale dans l\'ID, mais ajouter :');
console.log('- Colonne "secondary_capabilities" : ["formule", "condition"]');
console.log('- Colonne "capability_config" : JSON avec d√©tails');
console.log('Exemple: ID="64-prix-kwh" + secondary=["formule"] + config={...}');

// STRAT√âGIE 5 : NOUVEAU TYPE HYBRIDE
console.log('\nüöÄ STRAT√âGIE 5 : NOUVEAUX TYPES HYBRIDES');
console.log('---------------------------------------'); 
console.log('Cr√©er de nouveaux types sp√©cialis√©s :');
console.log('8 = Champ Formule+Condition');
console.log('9 = Champ Tableau+Formule');
console.log('10 = etc...');
console.log('‚ö†Ô∏è PROBL√àME : Explosion du nombre de types');

console.log('\n‚ùì QUELLE STRAT√âGIE CHOISIR ?');
console.log('=============================');
console.log('üéØ RECOMMANDATION : STRAT√âGIE 1 (PRIORIT√â)');
console.log('‚úÖ Simple √† impl√©menter');
console.log('‚úÖ Respecte le format [Type][Capacit√©]');
console.log('‚úÖ Capacit√© principale claire');
console.log('‚úÖ Extensible avec champs BDD si besoin');

console.log('\nüîß IMPL√âMENTATION PRIORIT√â :');
console.log('function getCapacityPriority(name) {');
console.log('  if (/tableau|grille/i.test(name)) return 5; // Plus prioritaire');
console.log('  if (/condition|si|alors/i.test(name)) return 4;');
console.log('  if (/formule|calcul|prix/i.test(name)) return 3;');
console.log('  if (/donn√©es|r√©sultat/i.test(name)) return 2;');
console.log('  return 1; // Neutre par d√©faut');
console.log('}');

console.log('\n‚ùó D√âCISION REQUISE : Laquelle vous pr√©f√©rez ?');